################################################################################
# 3-18-17: #####################################################################
• WHAT: No route matches [PATCH] "/signup"

• WHEN: updating a user

• WHY: 
  : apparently, on 2-23-17 I changed:

      = form_for @user do ..
      
  : to:

      = form_for @user, url: signup_path do ..

  : WTF ?! :)
  : I recall returning to exercises for invalid users signup test (in 7.3.4)
    I thought I missed. Still ... I wish I saw leaving this change after 
    redoing the exercises as an obviously obvious error.

• SOLUTION: revert, along with all the relevant tests

################################################################################


  
################################################################################
# 3-17-17: #####################################################################
• WHAT: 
  : ActionView::MissingTemplate in Microposts#create
  : Missing partial microposts/_home_logged_in, application/_home_logged_in ...

• WHEN: posting invalid micropost

• WHY: 
  : posting micropost is routed to microposts_controller
  : per microposts#create instructions, creating invalid microposts
    renders static_pages/home, which in turn
    renders _home_logged_in, which, by convention, Rails attempts to locate in
    views/microposts/.. and, of course, won't find it there

• SOLUTION:

    =render 'static_pages/home_logged_in'

################################################################################
• resolving the above unearths another bug:

• WHAT: 
  : NoMethodError in Microposts#create
  : undefined method `any?' for nil:NilClass

  .. in views/microposts/_feed.html.erb, line 1:
  
    <% if @feed_items.any? %>

• WHEN: posting invalid micropost

• WHY: microposts#create doesn't set @feed_items

• SOLUTION: set @feed_items in microposts#create

    @feed_items = current_user.feed.page params[:page]

################################################################################
• resolving the above unearths another bug:

• WHAT: 
  : No route matches [GET] "/microposts"

• WHEN:
  : upon posting of invalid micropost and
  : paginating to the next page of the user's microposts feed
  : on the user's home page with the invalid micropost

• WHY:
  : posting invalid micropost passes the app's control to microposts_controller
  : by default, will_paginate infers controller from the request's controller
  : so, will_paginate will now try to get /microposts?page=2
  : but since there is no GET '/microposts' routed, the app crashes

• SOLUTION:
  : tell will_paginate the intended controller/action to get:
  
    =will_paginate @feed_items, 
      params: { controller: :static_pages, action: :home }

################################################################################



################################################################################
# 2-25-17: #####################################################################
• WHAT:

    ERROR["test_user_with_no_session_and_no_valid_cookie_should_not_be_logged_in
    ", SessionsHelperTest, 3.027356256963685]
     test_user_with_no_session_and_no_valid_cookie_should_not_be_logged_in#Sessi
    onsHelperTest (3.03s)
    BCrypt::Errors::InvalidHash:         BCrypt::Errors::InvalidHash: invalid ha
    sh
            app/models/user.rb:40:in `new'
            ...
            
• WHEN: Refactoring user.authenticated? ...

    digest = send( "#{attribute}_digest" )
    return false if digest.nil?
    BCrypt::Password.new( digest ) == token            #<= line 40

• WHY: not sure how to explain, but swapping nil? for blank? makes the test pass

• SOLUTION: 

    ...
    return false if digest.blank?
    ...

• FOOTNOTE: in M.H. words: 

  "Refactoring the code as above is incredibly more error-prone without a solid 
  test suite, which is why we went to such trouble to write good tests ..."

################################################################################



################################################################################
# 2-24-17: #####################################################################
• WHAT:

    ERROR["test_account_activation", UserMailerTest, 0.5881627060007304]
     test_account_activation#UserMailerTest (0.59s)
    ActiveRecord::Fixture::FixtureError:         ActiveRecord::Fixture::FixtureE
    rror: table "users" has no column named "user_0".

• WHEN: testing UserMailer account_activation (in user_mailer_test.rb)

• WHY: my yesterday's trying to adhere to conventional Ruby indentation style in
  fixtures; users.yml

• SOLUTION: put the indentation as M.H. had it: butted against the left margin
: http://stackoverflow.com/questions/32363454/rails-hartl-tutorial-table-user-ha
  s-no-column-named

: REMEMBER:
  : .yml file is not .rb file
  : yaml lead lines start butted against left margin
  : (yaml is indentation super sensitive ...)

################################################################################



################################################################################
# 2-6-17: ######################################################################
################################################################################
• WHAT: returning to the unexpected 2nd error associated with logged out user 
  logging out again on another tab running the app:
  
    > ActionController::InvalidAuthenticityToken at /logout

• ISSUE: logging out changes authenticity token, another attempt to log out is 
  interpreted as forgery
  
• SOLUTION: skip logout reqeuest verification with session reset
: resets session just like logout sessions_helper; should be ok.

    skip_before_action :verify_authenticity_token, 
      only: :destroy, with: :reset_session

: Implementing without a test; dont' know how to write it.

################################################################################
• WHAT: 2nd of the two subtle bugs: user is running the app logged in two 
  browsers. Logs out of one, closes and reopens the other.
: app error:
    > BCrypt::Errors::InvalidHash in StaticPages#home

• ISSUE: Sending .authenticated? to user with no .remember_digest

    def authenticated?( cookies_remember_token )
      BCrypt::Password.new( self.remember_digest ) == cookies_remember_token
    end

: The user is still logged in the second browser (via a cookie with her :user_id 
  and :remember_token) but has no .remember_digest (deleted by her logout in 
  the first browser). BCrypt returns `InvalidHash` exception.

• SOLUTION: Harder to simulate with an integration test, but easy to check in 
  the User model test directly:
  : Start with a user that has no .remember_digest (true for the @user variable 
    defined in the setup method)
  : Then ask .authenticated? with 'irrelevant cookie token'
  : Note the 'irrelevant cookie token' passed to .authenticated? 
    : the BCrypt error occurs before the token passed in ever gets used
    : so, its value is irrelevant

################################################################################
• WHAT, WHEN: 1st of the two subtle bugs. User runs app in two (or more) tabs, 
  logs out from one tab, then logs out from another (without reloading it). 
: app error msg:
    > NoMethodError at /logout
    > undefined method `forget' for nil:NilClass

: intergation test UsersLoginTest error msg:
    > NoMethodError: undefined method `forget' for nil:NilClass
    > app/helpers/sessions_helper.rb:31:in `forget'
    > app/helpers/sessions_helper.rb:37:in `log_out'

• ISSUE: loging out a nonexistent user, i.e. sending the 'forget' message to 
  a nonexistent current_user

• SOLUTION: check if user is logged in before logging out.

• Well, test passes, but the app behaves the same, error and message remain:
: ActionController::InvalidAuthenticityToken
: probably for a different reason ... nevermind ... not important for now
  : see note from 2-6-2017 above

################################################################################



################################################################################
# 2-5-17: #####################################################################
• WHAT: Two subtle logout bugs:

• WHEN: logout when logged_in  
  : 1) two tabs
  : 2) two browsers
  
• ISSUE, SOLUTION explained in detail:
  : https://www.railstutorial.org/book/advanced_login#sec-two_subtle_bugs

################################################################################



################################################################################
# 2-4-17: #####################################################################
################################################################################
• WHAT: Test assert_select fails when it should pass.

• WHEN: After:

    post login_path, params: { session: ... }

• WHY: Did not redirect.

  : Remmber:
    In integration tests, we must follow redirects. That's the whole point.
    
• FIX:
    ...
    post login_path, params: { session: ... }
    follow_redirect!
    assert ...
    ...

################################################################################
• WHAT: Test login fails when it should pass

• WHEN: Going line by line through set up, before assertions

• WHY: To login a user, the app is posting session, not user !!!

    post login_path, params: { user: ... }        <- nope!
  
• FIX:

    post login_path, params: { session: ... }     <- yep!

################################################################################
# 2-3-17: #####################################################################
• WHAT: Signing up new user crashes.

• WHY: `post '/signup', to: 'users#create'` route no longer exists 
  : it was replaced with Rails' RESTful `resources :users`, which generated 
    `post '/users', to: 'users#create'`

• ISSUE: This aspect is not covered with a test:
  : actual post to sign up route in `=form_for @user ...` is not tested, 
    and so when it's changed, tests are still Green although they should be Red.

• FIX: 
  : 0) It is a good practice to write tests for discovered bugs.
  : 1) Reinstate the `post '/signup', to: 'users#create'` route, 
  : 2) write test coverage for it
    : to catch a "bug" when the route is changed
    : to be updated when this route changes and the test turns Red

      assert_select "form[action=?]", signup_path

  : 3) Test the `post '/signup`, to:..` route (= see Green)
  : 4) Then remove the custom route in favor of Rails's RESTful resource
    `post '/users', to: 'users#create'` provided by `resources :users`
    : The above test will be Red
    : It will have to be updated to test the new route to be Green again
    
      assert_select "form[action=?]", users_path

################################################################################



################################################################################
# 2-1-17: #####################################################################
• WHAT: just checking quard terminal tab I see:
    
  > You don't have bcrypt installed in your application. Please add it to your 
  > Gemfile and run bundle installETA: ??:??:??
  > ERROR["test_full_title_helper", ApplicationHelperTest, 0.02808261103928089]
  > test_full_title_helper#ApplicationHelperTest (0.03s)
  > LoadError:         LoadError: cannot load such file -- bcrypt
  >         app/models/user.rb:10:in `<class:User>'
  >         app/models/user.rb:1:in `<top (required)>'

• WHEN: definitelly, after all User bcrypt related tests passed ...

• FIX: using development notes from 1-28-17:

    $ ps aux | grep spring
  
  > list of 4 spring processes running, killed them all one by one:
  
    $ kill -15 <pid>

################################################################################
# 1-28-17: #####################################################################
• WHAT, WHEN:

    $ bundle exec guard
    > Expected string default value for '--listen-on'; got false (boolean)

• WHY:
: http://stackoverflow.com/a/41035588/247626

• SOLUTION:
: Gemfile:

    gem 'thor', '0.19.1'

: and (following instructions):

    $ bundle update thor
    $ bundle
################################################################################