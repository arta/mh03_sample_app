################################################################################
# 2-4-17: #####################################################################
################################################################################
• WHAT: Test assert_select fails when it should pass.

• WHEN: After:

    post login_path, params: { session: ... }

• WHY: Did not redirect.

  : Remmber:
    In integration tests, we must follow redirects. That's the whole point.
    
• FIX:
    ...
    post login_path, params: { session: ... }
    follow_redirect!
    assert ...
    ...

################################################################################
• WHAT: Test login fails when it should pass

• WHEN: Going line by line through set up, before assertions

• WHY: To login a user, the app is posting session, not user !!!

    post login_path, params: { user: ... }        <- nope!
  
• FIX:

    post login_path, params: { session: ... }     <- yep!

################################################################################
# 2-3-17: #####################################################################
• WHAT: Signing up new user crashes.

• WHY: `post '/signup', to: 'users#create'` route no longer exists 
  : it was replaced with Rails' RESTful `resources :users`, which generated 
    `post '/users', to: 'users#create'`

• ISSUE: This aspect is not covered with a test:
  : actual post to sign up route in `=form_for @user ...` is not tested, 
    and so when it's changed, tests are still Green although they should be Red.

• FIX: 
  : 0) It is a good practice to write tests for discovered bugs.
  : 1) Reinstate the `post '/signup', to: 'users#create'` route, 
  : 2) write test coverage for it
    : to catch a "bug" when the route is changed
    : to be updated when this route changes and the test turns Red

      assert_select "form[action=?]", signup_path

  : 3) Test the `post '/signup`, to:..` route (= see Green)
  : 4) Then remove the custom route in favor of Rails's RESTful resource
    `post '/users', to: 'users#create'` provided by `resources :users`
    : The above test will be Red
    : It will have to be updated to test the new route to be Green again
    
      assert_select "form[action=?]", users_path

################################################################################



################################################################################
# 2-1-17: #####################################################################
• WHAT: just checking quard terminal tab I see:
    
  > You don't have bcrypt installed in your application. Please add it to your 
  > Gemfile and run bundle installETA: ??:??:??
  > ERROR["test_full_title_helper", ApplicationHelperTest, 0.02808261103928089]
  > test_full_title_helper#ApplicationHelperTest (0.03s)
  > LoadError:         LoadError: cannot load such file -- bcrypt
  >         app/models/user.rb:10:in `<class:User>'
  >         app/models/user.rb:1:in `<top (required)>'

• WHEN: definitelly, after all User bcrypt related tests passed ...

• FIX: using development notes from 1-28-17:

    $ ps aux | grep spring
  
  > list of 4 spring processes running, killed them all one by one:
  
    $ kill -15 <pid>

################################################################################
# 1-28-17: #####################################################################
• WHAT, WHEN:

    $ bundle exec guard
    > Expected string default value for '--listen-on'; got false (boolean)

• WHY:
: http://stackoverflow.com/a/41035588/247626

• SOLUTION:
: Gemfile:

    gem 'thor', '0.19.1'

: and (following instructions):

    $ bundle update thor
    $ bundle
################################################################################